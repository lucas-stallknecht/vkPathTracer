#version 460

#define TONE_MAPPING_METHOD 1

layout (local_size_x = 16, local_size_y = 16) in;
layout(rgba32f, set = 0, binding = 0) uniform image2D ptImage;
layout(rgba8, set = 0, binding = 1) uniform image2D outImage;

layout (push_constant) uniform constants
{
    uint method;
    float exposition;
} PushConstants;

void main()
{
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
    vec3 hdrColor = imageLoad(ptImage, texelCoord).rgb;

    vec3 mapped;
    if(PushConstants.method == 0) {
        // reinhard tone mapping
        mapped = hdrColor / (hdrColor + vec3(1.0));
    }
    else {
        // exposition tone mapping
        mapped = vec3(1.0) - exp(-hdrColor * PushConstants.exposition);
    }

    imageStore(outImage, texelCoord, vec4(mapped, 1.0));
}